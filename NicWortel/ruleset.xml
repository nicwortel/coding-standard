<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="NicWortel"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="../vendor/squizlabs/php_codesniffer/phpcs.xsd">
    <description>My personal coding standard</description>

    <!-- Extend from PSR-12 -->
    <rule ref="PSR12"/>

    <rule ref="PSR12.Properties.ConstantVisibility">
        <type>error</type>
    </rule>

    <!-- Require strict types declaration -->
    <!-- Exclude whitespace rules which are already covered by the PSR12 standard -->
    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <property name="newlinesCountBetweenOpenTagAndDeclare" value="2"/>
            <property name="spacesCountAroundEqualsSign" value="0"/>
        </properties>
        <exclude name="SlevomatCodingStandard.TypeHints.DeclareStrictTypes.IncorrectWhitespaceBetweenOpenTagAndDeclare"/>
        <exclude name="SlevomatCodingStandard.TypeHints.DeclareStrictTypes.IncorrectStrictTypesFormat"/>
    </rule>

    <!-- Enforce importing of all classes, functions and constants from other
    namespaces (including the global namespace) -->
    <rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly">
        <properties>
            <property name="searchAnnotations" value="true"/>
            <property name="allowFallbackGlobalFunctions" value="false"/>
            <property name="allowFallbackGlobalConstants" value="false"/>
        </properties>
    </rule>

    <!-- Sort use statements and report unused ones -->
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" value="true"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses">
        <properties>
            <property name="psr12Compatible" value="true"/>
        </properties>
    </rule>

    <!-- Use PHP native type hints whenever possible. Use docblocks only when
    native type hints don't provide enough information. -->
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint"/>
    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint"/>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint"/>

    <!-- Ensure that arguments with a default value of null are marked nullable -->
    <rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue"/>

    <!-- Enforce the use of bool instead of boolean and int instead of int in
    docblocks -->
    <rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints"/>

    <!-- Require the short array syntax -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <!-- Enforce trailing commas in multi-line arrays -->
    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma"/>

    <!-- Enforce strict comparisons (=== instead of ==) -->
    <rule ref="SlevomatCodingStandard.Operators.DisallowEqualOperators"/>

    <!-- Disallow Yoda conditions -->
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowYodaComparison"/>

    <!-- Disallow the use of certain annotations -->
    <rule ref="SlevomatCodingStandard.Commenting.ForbiddenAnnotations">
        <properties>
            <property name="forbiddenAnnotations" type="array" value="@author,
                    @created,
                    @version,
                    @package,
                    @copyright,
                    @license,
                    @constructor,
                    @type"/>
        </properties>
    </rule>

    <!-- Disallow commented out code -->
    <rule ref="Squiz.PHP.CommentedOutCode"/>
</ruleset>
